<cffunction name="setdescription" access="public" returntype="void" default="void" hint="Mutator for property description" output="false">
<cfargument name="description" type="string" required="true" hint="The value to set description to">
<cfscript>
getTransferObject().setdescription(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getNamespaceisLoaded" access="public" returntype="boolean" default="boolean" hint="Whether or not the composition 'Namespace' has been loaded yet" output="false">
<cfscript>
return getTransferObject().getNamespaceisLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getkeywords" access="public" returntype="string" default="string" hint="Accessor for property keywords" output="false">
<cfscript>
return getTransferObject().getkeywords(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setallowComments" access="public" returntype="void" default="void" hint="Mutator for property allowComments" output="false">
<cfargument name="allowComments" type="boolean" required="true" hint="The value to set allowComments to">
<cfscript>
getTransferObject().setallowComments(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setkeywords" access="public" returntype="void" default="void" hint="Mutator for property keywords" output="false">
<cfargument name="keywords" type="string" required="true" hint="The value to set keywords to">
<cfscript>
getTransferObject().setkeywords(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="hasNamespace" access="public" returntype="boolean" default="boolean" hint="Whether or not this object contains a wiki.Namespace" output="false">
<cfscript>
return getTransferObject().hasNamespace(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDiscardTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when discards occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDiscardTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setkeywordsNull" access="public" returntype="void" default="void" hint="Set keywords to its NULL value'" output="false">
<cfscript>
getTransferObject().setkeywordsNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="init" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Constructor for Transfer class wiki.Page" output="false">
<cfargument name="transfer" type="transfer.com.Transfer" required="true" hint="The Transfer library">
<cfargument name="utility" type="transfer.com.util.Utility" required="true" hint="The Utility object">
<cfargument name="nullable" type="transfer.com.sql.Nullable" required="true" hint="The Nullable lookup object">
<cfargument name="thisObject" type="transfer.com.TransferObject" required="true" hint="What is determined to be the base 'this' object for this TransferObject">
<cfscript>
return getTransferObject().init(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getNamespaceMemento" access="public" returntype="struct" default="struct" hint="returns the memento for manytoone Namespace" output="false">
<cfscript>
return getTransferObject().getNamespaceMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="copyValuesTo" access="public" returntype="void" default="void" hint="Copies the values of this object to one of the same class" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The object to copy values to">
<cfscript>
getTransferObject().copyValuesTo(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getNamespace" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Accessor for Namespace, wiki.Namespace" output="false">
<cfscript>
return getTransferObject().getNamespace(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getdescription" access="public" returntype="string" default="string" hint="Accessor for property description" output="false">
<cfscript>
return getTransferObject().getdescription(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsLoaded" access="public" returntype="boolean" default="boolean" hint="easy way to determine if the data is loaded, since this is a TransferObject, it must be loaded, and therefore returns true." output="false">
<cfscript>
return getTransferObject().getIsLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="sameTransfer" access="public" returntype="boolean" default="boolean" hint="Checks to see if 2 transfer objects are the same" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="Yes" hint="The transfer object to check if we are equal">
<cfscript>
return getTransferObject().sameTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="gettitle" access="public" returntype="string" default="string" hint="Accessor for property title" output="false">
<cfscript>
return getTransferObject().gettitle(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getOriginalTransferObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns this object" output="false">
<cfscript>
return getTransferObject().getOriginalTransferObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="gettitleIsNull" access="public" returntype="boolean" default="boolean" hint="Returns whether or not title's value matches the set NULL value'" output="false">
<cfscript>
return getTransferObject().gettitleIsNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="removeNamespace" access="public" returntype="void" default="void" hint="remove the instance of wiki.Namespace" output="false">
<cfscript>
getTransferObject().removeNamespace(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setNamespace" access="public" returntype="void" default="void" hint="Mutator for Namespace, wiki.Namespace" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The wiki.Namespace to set">
<cfscript>
getTransferObject().setNamespace(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getClassName" access="public" returntype="string" default="string" hint="The class name of the TransferObject" output="false">
<cfscript>
return getTransferObject().getClassName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsProxy" access="public" returntype="boolean" default="boolean" hint="returns whether or not this is a proxy object. Since this is a TrasferObject, it returns false." output="false">
<cfscript>
return getTransferObject().getIsProxy(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="equalsTransfer" access="public" returntype="boolean" default="boolean" hint="If an object is persisted, returns true if they are of the same class and same id. If not, returns true if they are the same object." output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The TransferObject to test against">
<cfscript>
return getTransferObject().equalsTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsPersisted" access="public" returntype="boolean" default="boolean" hint="If this object is stored in the database" output="false">
<cfscript>
return getTransferObject().getIsPersisted(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="settitleNull" access="public" returntype="void" default="void" hint="Set title to its NULL value'" output="false">
<cfscript>
getTransferObject().settitleNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getallowComments" access="public" returntype="boolean" default="boolean" hint="Accessor for property allowComments" output="false">
<cfscript>
return getTransferObject().getallowComments(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setpassword" access="public" returntype="void" default="void" hint="Mutator for property password" output="false">
<cfargument name="password" type="string" required="true" hint="The value to set password to">
<cfscript>
getTransferObject().setpassword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setpageID" access="public" returntype="void" default="void" hint="Mutator for property pageID" output="false">
<cfargument name="pageID" type="uuid" required="true" hint="The value to set pageID to">
<cfscript>
getTransferObject().setpageID(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getMemento" access="public" returntype="struct" default="struct" hint="Returns the memento for all non-lazy members of this object" output="false">
<cfscript>
return getTransferObject().getMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setNamespaceMemento" access="public" returntype="void" default="void" hint="set the state of composition manytoone 'Namespace'" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setNamespaceMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterUpdateTransferEvent" access="public" returntype="void" default="void" hint="Observer method action for when updates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterUpdateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="settitle" access="public" returntype="void" default="void" hint="Mutator for property title" output="false">
<cfargument name="title" type="string" required="true" hint="The value to set title to">
<cfscript>
getTransferObject().settitle(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setPropertyMemento" access="public" returntype="void" default="void" hint="set the Property state of this object with a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setdescriptionNull" access="public" returntype="void" default="void" hint="Set description to its NULL value'" output="false">
<cfscript>
getTransferObject().setdescriptionNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDeleteTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when deletes occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDeleteTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getPropertyMemento" access="public" returntype="struct" default="struct" hint="returns the memento for properties" output="false">
<cfscript>
return getTransferObject().getPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="clone" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Get a deep clone of this object" output="false">
<cfscript>
return getTransferObject().clone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getkeywordsIsNull" access="public" returntype="boolean" default="boolean" hint="Returns whether or not keywords's value matches the set NULL value'" output="false">
<cfscript>
return getTransferObject().getkeywordsIsNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setMemento" access="public" returntype="void" default="void" hint="set the state of this object from a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getname" access="public" returntype="string" default="string" hint="Accessor for property name" output="false">
<cfscript>
return getTransferObject().getname(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getLoadedObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns itself, as there is no object to load" output="false">
<cfscript>
return getTransferObject().getLoadedObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsClone" access="public" returntype="boolean" default="boolean" hint="If this object is a clone or not" output="false">
<cfscript>
return getTransferObject().getIsClone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setname" access="public" returntype="void" default="void" hint="Mutator for property name" output="false">
<cfargument name="name" type="string" required="true" hint="The value to set name to">
<cfscript>
getTransferObject().setname(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getpageID" access="public" returntype="uuid" default="uuid" hint="Accessor for property pageID" output="false">
<cfscript>
return getTransferObject().getpageID(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterCreateTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when creates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterCreateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getpassword" access="public" returntype="string" default="string" hint="Accessor for property password" output="false">
<cfscript>
return getTransferObject().getpassword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getdescriptionIsNull" access="public" returntype="boolean" default="boolean" hint="Returns whether or not description's value matches the set NULL value'" output="false">
<cfscript>
return getTransferObject().getdescriptionIsNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setpasswordNull" access="public" returntype="void" default="void" hint="Set password to its NULL value'" output="false">
<cfscript>
getTransferObject().setpasswordNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getpasswordIsNull" access="public" returntype="boolean" default="boolean" hint="Returns whether or not password's value matches the set NULL value'" output="false">
<cfscript>
return getTransferObject().getpasswordIsNull(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsDirty" access="public" returntype="boolean" default="boolean" hint="If this object's data is differnt from that stored in the DB." output="false">
<cfscript>
return getTransferObject().getIsDirty(argumentCollection=arguments);</cfscript>
</cffunction>


