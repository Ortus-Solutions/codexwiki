<cffunction name="getmodifyDate" access="public" returntype="date" default="date" hint="Accessor for property modifyDate" output="false">
<cfscript>
return getTransferObject().getmodifyDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setbeforeBodyEnd" access="public" returntype="void" default="void" hint="Mutator for property beforeBodyEnd" output="false">
<cfargument name="beforeBodyEnd" type="string" required="true" hint="The value to set beforeBodyEnd to">
<cfscript>
getTransferObject().setbeforeBodyEnd(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getafterSideBar" access="public" returntype="string" default="string" hint="Accessor for property afterSideBar" output="false">
<cfscript>
return getTransferObject().getafterSideBar(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getClassName" access="public" returntype="string" default="string" hint="The class name of the TransferObject" output="false">
<cfscript>
return getTransferObject().getClassName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getOriginalTransferObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns this object" output="false">
<cfscript>
return getTransferObject().getOriginalTransferObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getcustomHTML_id" access="public" returntype="uuid" default="uuid" hint="Accessor for property customHTML_id" output="false">
<cfscript>
return getTransferObject().getcustomHTML_id(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setafterBodyStart" access="public" returntype="void" default="void" hint="Mutator for property afterBodyStart" output="false">
<cfargument name="afterBodyStart" type="string" required="true" hint="The value to set afterBodyStart to">
<cfscript>
getTransferObject().setafterBodyStart(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterCreateTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when creates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterCreateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="equalsTransfer" access="public" returntype="boolean" default="boolean" hint="If an object is persisted, returns true if they are of the same class and same id. If not, returns true if they are the same object." output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The TransferObject to test against">
<cfscript>
return getTransferObject().equalsTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsPersisted" access="public" returntype="boolean" default="boolean" hint="If this object is stored in the database" output="false">
<cfscript>
return getTransferObject().getIsPersisted(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="clone" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Get a deep clone of this object" output="false">
<cfscript>
return getTransferObject().clone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="init" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Constructor for Transfer class wiki.CustomHTML" output="false">
<cfargument name="transfer" type="transfer.com.Transfer" required="true" hint="The Transfer library">
<cfargument name="utility" type="transfer.com.util.Utility" required="true" hint="The Utility object">
<cfargument name="nullable" type="transfer.com.sql.Nullable" required="true" hint="The Nullable lookup object">
<cfargument name="thisObject" type="transfer.com.TransferObject" required="true" hint="What is determined to be the base 'this' object for this TransferObject">
<cfscript>
return getTransferObject().init(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getPropertyMemento" access="public" returntype="struct" default="struct" hint="returns the memento for properties" output="false">
<cfscript>
return getTransferObject().getPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterUpdateTransferEvent" access="public" returntype="void" default="void" hint="Observer method action for when updates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterUpdateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsProxy" access="public" returntype="boolean" default="boolean" hint="returns whether or not this is a proxy object. Since this is a TrasferObject, it returns false." output="false">
<cfscript>
return getTransferObject().getIsProxy(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDiscardTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when discards occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDiscardTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setMemento" access="public" returntype="void" default="void" hint="set the state of this object from a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setbeforeHeadEnd" access="public" returntype="void" default="void" hint="Mutator for property beforeHeadEnd" output="false">
<cfargument name="beforeHeadEnd" type="string" required="true" hint="The value to set beforeHeadEnd to">
<cfscript>
getTransferObject().setbeforeHeadEnd(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getafterBodyStart" access="public" returntype="string" default="string" hint="Accessor for property afterBodyStart" output="false">
<cfscript>
return getTransferObject().getafterBodyStart(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="copyValuesTo" access="public" returntype="void" default="void" hint="Copies the values of this object to one of the same class" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The object to copy values to">
<cfscript>
getTransferObject().copyValuesTo(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getbeforeBodyEnd" access="public" returntype="string" default="string" hint="Accessor for property beforeBodyEnd" output="false">
<cfscript>
return getTransferObject().getbeforeBodyEnd(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDeleteTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when deletes occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDeleteTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setbeforeSideBar" access="public" returntype="void" default="void" hint="Mutator for property beforeSideBar" output="false">
<cfargument name="beforeSideBar" type="string" required="true" hint="The value to set beforeSideBar to">
<cfscript>
getTransferObject().setbeforeSideBar(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setPropertyMemento" access="public" returntype="void" default="void" hint="set the Property state of this object with a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getbeforeSideBar" access="public" returntype="string" default="string" hint="Accessor for property beforeSideBar" output="false">
<cfscript>
return getTransferObject().getbeforeSideBar(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getMemento" access="public" returntype="struct" default="struct" hint="Returns the memento for all non-lazy members of this object" output="false">
<cfscript>
return getTransferObject().getMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getLoadedObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns itself, as there is no object to load" output="false">
<cfscript>
return getTransferObject().getLoadedObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsLoaded" access="public" returntype="boolean" default="boolean" hint="easy way to determine if the data is loaded, since this is a TransferObject, it must be loaded, and therefore returns true." output="false">
<cfscript>
return getTransferObject().getIsLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsClone" access="public" returntype="boolean" default="boolean" hint="If this object is a clone or not" output="false">
<cfscript>
return getTransferObject().getIsClone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setmodifyDate" access="public" returntype="void" default="void" hint="Mutator for property modifyDate" output="false">
<cfargument name="modifyDate" type="date" required="true" hint="The value to set modifyDate to">
<cfscript>
getTransferObject().setmodifyDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setcustomHTML_id" access="public" returntype="void" default="void" hint="Mutator for property customHTML_id" output="false">
<cfargument name="customHTML_id" type="uuid" required="true" hint="The value to set customHTML_id to">
<cfscript>
getTransferObject().setcustomHTML_id(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsDirty" access="public" returntype="boolean" default="boolean" hint="If this object's data is differnt from that stored in the DB." output="false">
<cfscript>
return getTransferObject().getIsDirty(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="sameTransfer" access="public" returntype="boolean" default="boolean" hint="Checks to see if 2 transfer objects are the same" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="Yes" hint="The transfer object to check if we are equal">
<cfscript>
return getTransferObject().sameTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setafterSideBar" access="public" returntype="void" default="void" hint="Mutator for property afterSideBar" output="false">
<cfargument name="afterSideBar" type="string" required="true" hint="The value to set afterSideBar to">
<cfscript>
getTransferObject().setafterSideBar(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getbeforeHeadEnd" access="public" returntype="string" default="string" hint="Accessor for property beforeHeadEnd" output="false">
<cfscript>
return getTransferObject().getbeforeHeadEnd(argumentCollection=arguments);</cfscript>
</cffunction>


